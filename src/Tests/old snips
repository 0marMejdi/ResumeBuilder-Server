
function generateCodeMarkup_v1(obj, indentLevel = 0) {
    const indent = '&nbsp;&nbsp;&nbsp;&nbsp;'.repeat(indentLevel);

    let html = '<pre class="code m-0 p-0"><code>';

    if (typeof obj === 'object' && obj !== null) {
        html += indent + '{<br>';
        Object.entries(obj).forEach(([key, value], index, array) => {
            html += indent + '&nbsp;&nbsp;&nbsp;&nbsp;<span class="property">"' + key + '"</span>: ';

            if (typeof value === 'object' && value !== null) {
                if (Object.keys(value).length === 0) {
                    html += '<span class="null">undefined</span>';
                } else {
                    html += '<br>' + generateCodeMarkup(value, indentLevel + 1);
                }
            } else if (typeof value === 'string') {
                html += '<span class="string">"' + value + '"</span>';
            } else if (typeof value === 'number') {
                html += '<span class="number">' + value + '</span>';
            } else if (typeof value === 'boolean') {
                html += '<span class="boolean">' + value + '</span>';
            } else if (value === null) {
                html += '<span class="null">null</span>';
            } else if (value === undefined) {
                html += '<span class="null">undefined</span>';
            }


            if (index !== array.length - 1) {
                html += ',<br>';
            } else {
                html += '<br>';
            }
        });
        html += indent + '}';
    } else {
        html += JSON.stringify(obj);
    }

    html += '</code></pre>';
    return html;
}
function generateCodeMarkup_v2(obj, indentLevel = 0) {
    const indent = '&nbsp;&nbsp;&nbsp;&nbsp;'.repeat(indentLevel);

    let html = '<pre class="code"><code>';

    if (Array.isArray(obj)) {
        html += indent + '[<br>';
        obj.forEach((item, index, array) => {
            html += generateCodeMarkup(item, indentLevel + 1);
            if (index !== array.length - 1) {
                html += ',<br>';
            }
        });
        html += indent + ']';
    } else if (typeof obj === 'object' && obj !== null) {
        html += indent + '{<br>';
        Object.entries(obj).forEach(([key, value], index, array) => {
            html += indent + '&nbsp;&nbsp;&nbsp;&nbsp;<span class="property">"' + key + '"</span>: ';

            if (typeof value === 'object' && value !== null) {
                if (Object.keys(value).length === 0) {
                    html += '<span class="null">undefined</span>';
                } else {
                    html += '<br>' + generateCodeMarkup(value, indentLevel + 1);
                }
            } else if (typeof value === 'string') {
                html += '<span class="string">"' + value + '"</span>';
            } else if (typeof value === 'number') {
                html += '<span class="number">' + value + '</span>';
            } else if (typeof value === 'boolean') {
                html += '<span class="boolean">' + value + '</span>';
            } else if (value === null) {
                html += '<span class="null">null</span>';
            } else if (value === undefined) {
                html += '<span class="null">undefined</span>';
            }

            if (index !== array.length - 1) {
                html += ',<br>';
            } else {
                html += '<br>';
            }
        });
        html += indent + '}';
    } else {
        html += indent + JSON.stringify(obj);
    }

    html += '</code></pre>';
    return html;
}
function generateCodeMarkup_v3(str, indentLevel = 0) {
    const obj = JSON.parse(str); // Parse the string into an object
    const indent = '&nbsp;&nbsp;&nbsp;&nbsp;'.repeat(indentLevel);

    let html = '<pre class="code"><code>';

    if (Array.isArray(obj)) {
        html += indent + '[<br>';
        obj.forEach((item, index, array) => {
            html += generateCodeMarkup(item, indentLevel + 1);
            if (index !== array.length - 1) {
                html += ',<br>';
            }
        });
        html += indent + ']';
    } else if (typeof obj === 'object' && obj !== null) {
        html += indent + '{<br>';
        Object.entries(obj).forEach(([key, value], index, array) => {
            html += indent + '&nbsp;&nbsp;&nbsp;&nbsp;<span class="property">"' + key + '"</span>: ';

            if (typeof value === 'object' && value !== null) {
                if (Object.keys(value).length === 0) {
                    html += '<span class="null">undefined</span>';
                } else {
                    html += '<br>' + generateCodeMarkup(JSON.stringify(value), indentLevel + 1); // Convert nested object back to string
                }
            } else if (typeof value === 'string') {
                html += '<span class="string">"' + value + '"</span>';
            } else if (typeof value === 'number') {
                html += '<span class="number">' + value + '</span>';
            } else if (typeof value === 'boolean') {
                html += '<span class="boolean">' + value + '</span>';
            } else if (value === null) {
                html += '<span class="null">null</span>';
            } else if (value === undefined) {
                html += '<span class="null">undefined</span>';
            }

            if (index !== array.length - 1) {
                html += ',<br>';
            } else {
                html += '<br>';
            }
        });
        html += indent + '}';
    } else {
        html += indent + JSON.stringify(obj);
    }

    html += '</code></pre>';
    return html;
}
function generateCodeMarkup_v4(obj, indentLevel = 0) {
    const str = JSON.stringify(obj); // Stringify the object
    const indent = '&nbsp;&nbsp;&nbsp;&nbsp;'.repeat(indentLevel);

    let html = '<pre class="code"><code>';

    if (Array.isArray(obj)) {
        html += indent + '[<br>';
        obj.forEach((item, index, array) => {
            html += generateCodeMarkup(item, indentLevel + 1);
            if (index !== array.length - 1) {
                html += ',<br>';
            }
        });
        html += indent + ']';
    } else if (typeof obj === 'object' && obj !== null) {
        html += indent + '{<br>';
        Object.entries(obj).forEach(([key, value], index, array) => {
            html += indent + '&nbsp;&nbsp;&nbsp;&nbsp;<span class="property">"' + key + '"</span>: ';

            if (typeof value === 'object' && value !== null) {
                if (Object.keys(value).length === 0) {
                    html += '<span class="null">undefined</span>';
                } else {
                    html += '<br>' + generateCodeMarkup(JSON.stringify(value), indentLevel + 1); // Convert nested object back to string
                }
            } else if (typeof value === 'string') {
                html += '<span class="string">"' + value + '"</span>';
            } else if (typeof value === 'number') {
                html += '<span class="number">' + value + '</span>';
            } else if (typeof value === 'boolean') {
                html += '<span class="boolean">' + value + '</span>';
            } else if (value === null) {
                html += '<span class="null">null</span>';
            } else if (value === undefined) {
                html += '<span class="null">undefined</span>';
            }

            if (index !== array.length - 1) {
                html += ',<br>';
            } else {
                html += '<br>';
            }
        });
        html += indent + '}';
    } else {
        html += indent + JSON.stringify(obj);
    }

    html += '</code></pre>';
    return html;
}
function generateCodeMarkup_v5(obj, indentLevel = 0) {
    const indent = '&nbsp;&nbsp;&nbsp;&nbsp;'.repeat(indentLevel);

    let html = '<pre class="code"><code>';

    if (Array.isArray(obj)) {
        html += indent + '[<br>';
        obj.forEach((item, index, array) => {
            html += generateCodeMarkup(item, indentLevel + 1);
            if (index !== array.length - 1) {
                html += ',<br>';
            }
        });
        html += indent + ']';
    } else if (typeof obj === 'object' && obj !== null) {
        html += indent + '{<br>';
        const keys = Object.keys(obj);
        keys.forEach((key, index) => {
            const value = obj[key];
            html += indent + '&nbsp;&nbsp;&nbsp;&nbsp;<span class="property">"' + key + '"</span>: ';

            if (typeof value === 'object' && value !== null) {
                if (Object.keys(value).length === 0) {
                    html += '<span class="null">undefined</span>';
                } else {
                    html += '<br>' + generateCodeMarkup(value, indentLevel + 1);
                }
            } else if (typeof value === 'string') {
                html += '<span class="string">"' + value + '"</span>';
            } else if (typeof value === 'number') {
                html += '<span class="number">' + value + '</span>';
            } else if (typeof value === 'boolean') {
                html += '<span class="boolean">' + value + '</span>';
            } else if (value === null) {
                html += '<span class="null">null</span>';
            } else if (value === undefined) {
                html += '<span class="null">undefined</span>';
            }

            if (index !== keys.length - 1) {
                html += ',<br>';
            } else {
                html += '<br>';
            }
        });
        html += indent + '}';
    } else {
        html += indent + JSON.stringify(obj);
    }

    html += '</code></pre>';
    return html;
}

function generateCodeMarkup_v6(obj, indentLevel = 0) {
    const indent = '&nbsp;&nbsp;&nbsp;&nbsp;'.repeat(indentLevel);

    let html = '<pre class="code"><code>';

    if (Array.isArray(obj)) {
        if (obj.length === 0) {
            html += indent + '[]';
        } else {
            html += indent + '[<br>';
            obj.forEach((item, index, array) => {
                html += generateCodeMarkup(item, indentLevel + 1);
                if (index !== array.length - 1) {
                    html += ',<br>';
                }
            });
            html += indent + ']';
        }
    } else if (typeof obj === 'object' && obj !== null) {
        html += indent + '{<br>';
        const keys = Object.keys(obj);
        keys.forEach((key, index) => {
            const value = obj[key];
            html += indent + '&nbsp;&nbsp;&nbsp;&nbsp;<span class="property">"' + key + '"</span>: ';

            if (typeof value === 'object' && value !== null) {
                if (Object.keys(value).length === 0) {
                    html += '<span class="null">undefined</span>';
                } else {
                    html += '<br>' + generateCodeMarkup(value, indentLevel + 1);
                }
            } else if (typeof value === 'string') {
                html += '<span class="string">"' + value + '"</span>';
            } else if (typeof value === 'number') {
                html += '<span class="number">' + value + '</span>';
            } else if (typeof value === 'boolean') {
                html += '<span class="boolean">' + value + '</span>';
            } else if (value === null) {
                html += '<span class="null">null</span>';
            } else if (value === undefined) {
                html += '<span class="null">undefined</span>';
            }

            if (index !== keys.length - 1) {
                html += ',<br>';
            } else {
                html += '<br>';
            }
        });
        html += indent + '}';
    } else {
        html += indent + JSON.stringify(obj);
    }

    html += '</code></pre>';
    return html;